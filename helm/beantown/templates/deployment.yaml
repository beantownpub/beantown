apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beantown.fullname" . }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ include "beantown.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "beantown.fullname" . }}
        version: {{ .Values.image.tag | default .Chart.AppVersion }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "beantown.serviceAccountName" . }}
      {{- end }}
      containers:
      - env:
        - name: AWS_DEFAULT_REGION
          value: {{ .Values.aws.region }}
        {{- if .Values.externalSecrets.enabled }}
        - name: API_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: API_USERNAME
        - name: API_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: API_PASSWORD
        - name: MENU_API_PROTOCOL
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MENU_API_PROTOCOL
        - name: MENU_API_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MENU_API_PORT
        - name: MENU_API_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MENU_API_HOST
        - name: MERCH_API_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MERCH_API_HOST
        - name: MERCH_API_PROTOCOL
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MERCH_API_PROTOCOL
        - name: MERCH_API_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: MERCH_API_PORT
        - name: CONTACT_API_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: CONTACT_API_HOST
        - name: CONTACT_API_PROTOCOL
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: CONTACT_API_PROTOCOL
        - name: CONTACT_API_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: CONTACT_API_PORT
        - name: KAFKA_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: KAFKA_CLIENT_ID
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: KAFKA_USERNAME
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: KAFKA_PASSWORD
        - name: KAFKA_BOOTSTRAP_SERVER
          valueFrom:
            secretKeyRef:
              name: {{ include "beantown.fullname" . }}
              key: KAFKA_BOOTSTRAP_SERVER
        {{- end }}
        {{- if eq .Values.env "dev" }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.aws.accessKeyId }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.aws.secretAccessKey }}
        {{- end }}
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
      {{- if eq .Values.global.env "dev" }}
        image: "beantown:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Never
      {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Always
      {{- end }}
        name: {{ include "beantown.fullname" . }}
        ports:
        - containerPort: {{ .Values.containerPort }}
          name: {{ include "beantown.targetPort" . }}
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        resources: {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          exec:
            command:
            - cat
            - /app/package.json
          initialDelaySeconds: 5
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ include "beantown.targetPort" . }}
          initialDelaySeconds: 15
          failureThreshold: 3
          periodSeconds: 10
      - image: redis
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          name: tcp-redis
          protocol: TCP
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
          limits:
            memory: 350Mi
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
